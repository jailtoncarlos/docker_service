# Primeiro estágio: a partir da imagem python base
ARG PYTHON_BASE_DEV=python-base:latest
FROM ${PYTHON_BASE_DEV} AS python-base-dev

ARG WORK_DIR="/opt/app"
ARG REQUIREMENTS_FILE=requirements.txt
ARG UID="1000"
ARG GID="1000"
ARG USER_NAME=customuser

USER root

# Instala as dependências necessárias
RUN apt-get update && apt-get install -y --fix-missing openssh-server openssh-client procps sudo \
    && apt-get -y autoremove && apt-get clean \
    && rm -rf /var/cache/apt/* && rm -rf /var/lib/apt/lists/*

# Cria o grupo e o usuário com base nos UID e GID fornecidos
RUN groupadd -g "${GID}" customgroup && \
    useradd -m -u "${UID}" -g "${GID}" -m --no-log-init -s /bin/bash $USER_NAME

# Adicionando usuário ao grupo root
RUN usermod -G root $USER_NAME

# [Opcional] Adiciona suporte para Sudo.
RUN echo $USER_NAME ALL=\(ALL\) NOPASSWD:ALL > /etc/sudoers.d/$USER_NAME && \
    chmod 0440 /etc/sudoers.d/$USER_NAME && \
    echo "$USER_NAME:mudar@123" | chpasswd

# Se o $USER_NAME == "customuser", gera uma nova chave ssh.
RUN if [ "$USER_NAME" = "customuser" ]; then \
        ssh-keygen -t ed25519 -C "Usuário $USER_NAME" -f /home/$USER_NAME/.ssh/id_ed25519_$USER_NAME -N ""; \
    fi

RUN python -m pip install --upgrade pip

# Instalar o pre-commit (caso não esteja no requirements.txt)
RUN pip install pre-commit

# 2o estágio: a partir do 1o estágio
ARG DEV_IMAGE=python-base-dev:latest
FROM ${DEV_IMAGE} AS app-dev

ARG WORK_DIR="/opt/app"
ARG REQUIREMENTS_FILE=requirements.txt
ARG UID="1000"
ARG GID="1000"
ARG USER_NAME=customuser

# Defina o usuário padrão para o container
USER $USER_NAME

# Definir o diretório de trabalho usando o argumento passado
# diretório padrão onde o CMD será executado
WORKDIR $WORK_DIR

# Adicionar os arquivos da aplicação
COPY . $WORK_DIR

# Install requirements
# --mount=type=cache,target=/root/.cache/pip é uma opção avançada do Docker,
# introduzida no BuildKit (um recurso mais recente do Docker para melhorar a
# eficiência da construção de imagens). Ela cria um cache temporário durante
# o processo de construção.
RUN --mount=type=cache,target=/root/.cache/pip pip install -r ${REQUIREMENTS_FILE}

# Instalar os hooks do pre-commit, caso exista o arquivo .pre-commit-config.yaml
RUN if [ -f .pre-commit-config.yaml ]; then pre-commit install --install-hooks; fi

CMD ["/bin/sh", "-c", "echo 'Starting dev container'; sleep infinity"]