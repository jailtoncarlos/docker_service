ARG PYTHON_BASE_USER_IMAGE=python-base:latest
FROM ${PYTHON_BASE_USER_IMAGE} AS python-base-user

ARG USER_UID
ARG USER_GID
ARG USER_NAME

ENV USER_UID=${USER_UID}
ENV USER_GID=${USER_GID}
ENV USER_NAME=${USER_NAME}

USER root

# Instala as dependências necessárias
RUN apt-get update && apt-get install -y --fix-missing openssh-server openssh-client procps sudo \
    && apt-get -y autoremove && apt-get clean \
    && rm -rf /var/cache/apt/* && rm -rf /var/lib/apt/lists/*

# Cria o grupo e o usuário com base nos USER_UID e USER_GID fornecidos
RUN groupadd -g "${USER_GID}" $USER_NAME && \
    useradd -u "${USER_UID}" -g "${USER_GID}" -m --no-log-init -s /bin/bash $USER_NAME

# Adicionar o diretório /home/USER_NAME/.local/bin ao PATH
ENV PATH="$PATH:/home/${USER_NAME}/.local/bin"

# Adicionando usuário ao grupo root
RUN usermod -G root $USER_NAME

# [Opcional] Adiciona suporte para Sudo.
RUN echo $USER_NAME ALL=\(ALL\) NOPASSWD:ALL > /etc/sudoers.d/$USER_NAME && \
    chmod 0440 /etc/sudoers.d/$USER_NAME && \
    echo "$USER_NAME:mudar@123" | chpasswd

# Se o $USER_NAME == "customuser", gera uma nova chave ssh.
RUN if [ "$USER_NAME" = "customuser" ]; then \
        ssh-keygen -t ed25519 -C "Usuário $USER_NAME" -f /home/$USER_NAME/.ssh/id_ed25519_$USER_NAME -N ""; \
    fi

RUN python -m pip install --upgrade pip

# Instalar o pre-commit (caso não esteja no requirements.txt)
RUN pip install pre-commit
